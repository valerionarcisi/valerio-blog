---
import AstroLayout from "../../layouts/layout.astro";
import Post from "../../components/Post/Post";
import {
  getAndParseHyGraphAbstractPost,
  getAndParsePostDetail,
  type ExitTAbstractPost,
  type ExitTPost,
} from "../../services/hygraph";
import { Effect, Match } from "effect";

export const prerender = true; // This line tells Astro to prerender the page
export const getStaticPaths = async () => {
  const posts = (await Effect.runPromiseExit(
    getAndParseHyGraphAbstractPost(`{
      posts(orderBy: publishedAt_DESC) {
        id,
        title,
        slug,
        publishedAt,
        tags,
        extract
        createdAt
        coverImage {
          id,
          url,
          fileName,
        }
      }
    }
  `)
  )) as ExitTAbstractPost;

  const postMatch = Match.typeTags<ExitTAbstractPost>()({
    Success: ({ value }) =>
      value.map((post) => ({
        params: { slug: post.slug },
      })),
    Failure: () => ({
      params: { slug: "404" },
    }),
  });
  return postMatch(posts);
};

const { slug } = Astro.params;

const post = (await Effect.runPromiseExit(
  getAndParsePostDetail(`{
      post(where: {slug: "${slug}"}) {
        title
        id
        slug
        publishedAt
        content
        date
        tags
        extract
        authors {
          name
          picture {
            url
            fileName
          }
        }
        coverImage {
          fileName
          url
          height
          width
        }
      }
    }
  `)
)) as ExitTPost;

const postMatch = Match.typeTags<ExitTPost>()({
  Success: ({ value }) => value,
  Failure: () => undefined,
});

const postDetail = postMatch(post);
if (!postDetail) return Astro.redirect("/404");

---

<AstroLayout
  seo={{
    title: `${postDetail.title} | Valerio Narcisi Blog`,
    description: postDetail.extract ? postDetail.extract : "",
    image: postDetail.coverImage?.url,
    type: "article",
  }}
>
  <Post post={postDetail} />
</AstroLayout>
